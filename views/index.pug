extends layout

block content
  #main.container
    header#header.row.g-0.py-3.border-bottom
      .col.py-3
        button#leave-game.btn.btn-sm.btn-outline-danger(type="button" onclick="window.location.reload()") Quitter
      .col
        h1.text-center.display-3= __('app.name')
        h2#game-number.display-6.text-center Partie #<span class="number"></span>
      #user-panel.col.py-3.text-end
        p.welcome Bonjour <span class="pseudo"></span>
    #choose-game.row.mt-4.pt-4
      .d-grid.gap-3.col-4.mx-auto
        button#new-game.btn.btn-lg.btn-primary(type="button") Nouvelle partie
        button#join-button-template.join.btn.btn-lg.btn-outline-secondary(type="button") Rejoindre la partie <span class="number"></span>
    #main-container.row.g-0
      #news.col.overflow-auto(style={height: tileSize * 0.7 * 2 + tileSize * 4 + 20 + 'px'})
        p.message.waiting-user
          span.spinner-grow.spinner-grow-sm(aria-hidden="true")
          span.text(role="status") En attente d'un autre joueur...
        p.message.user-arrived <em class="opponent"></em> vous a rejoint !
        p.message.user-left <em class="opponent"></em> a quitté la partie.
        p.message.opponent-identity Votre adversaire est <em class="opponent"></em> !
        p.message.i-start C'est à vous de commencer.
        p.message.other-start C'est à lui de commencer.
        p.message.thinking
          span.spinner-grow.spinner-grow-sm(aria-hidden="true")
          span.text(role="status") <em class="opponent"></em> réfléchit...
        p.message.shot-template Vous jouez un <em class="piece-type"></em> en <em class="coords"></em>.
        p.message.opponent-shot-template <em class="opponent"></em> joue un <em class="piece-type"></em> en <em class="coords"></em>.
        p.message.your-turn C'est à votre tour.
        p.message.other-player-left Votre adversaire a quitté la partie.
        p.message.win Vous avez gagné la partie !
        p.message.loose Votre adversaire a gagné la partie.
      #board-game-container.col.col-md-auto(style={
        width: (boardGame.xNbCell * tileSize) + 'px'
      })
        section.stock.opponent(style={height: tileSize * 0.7 + 'px'})
          .row.row-cols-auto.g-0

        -
          let moves = [
            {'id': 'top',           'x': 0,   'y': -1,  'xSvg': '50',   'ySvg': '35'},
            {'id': 'top-right',     'x': 1,   'y': -1,  'xSvg': '67.7', 'ySvg': '35'},
            {'id': 'right',         'x': 1,   'y': 0,   'xSvg': '67.5', 'ySvg': '52.5'},
            {'id': 'bottom-right',  'x': 1,   'y': 1,   'xSvg': '67.5', 'ySvg': '70'},
            {'id': 'bottom',        'x': 0,   'y': 1,   'xSvg': '50',   'ySvg': '70'},
            {'id': 'bottom-left',   'x': -1,  'y': 1,   'xSvg': '32.5', 'ySvg': '70'},
            {'id': 'left',          'x': -1,  'y': 0,   'xSvg': '32.5', 'ySvg': '52.5'},
            {'id': 'top-left',      'x': -1,  'y': -1,  'xSvg': '32.5', 'ySvg': '35'},
          ]

        section.board-game.d-table(data-player="p1" style={
          width: (boardGame.xNbCell * tileSize) + 'px',
          height: (boardGame.yNbCell * tileSize) + 'px'
        })
          each row, y in boardGame.cells
            .d-table-row
            -
              let zone = 'river'
              if (y <= boardGame.yPromotionZone) { zone = 'p1-promotion-zone' }
              if (y >= boardGame.yNbCell - 1 - boardGame.yPromotionZone) { zone = 'p2-promotion-zone' }
            each piece, x in row
              .tile.d-table-cell(style={
                width: tileSize + 'px',
                height: tileSize + 'px'
              })
                div(
                  class='cell ' + zone
                  data-x=x
                  data-y=y
                  style={
                    width: (tileSize - 2) + 'px',
                    height: (tileSize - 2) + 'px'
                  }
                )
                  - if (piece)
                    include piece.pug

        -
          moves = [
            {'id': 'top',           'x': 0,   'y': 1,   'xSvg': '50',   'ySvg': '35'},
            {'id': 'top-right',     'x': -1,  'y': 1,   'xSvg': '67.7', 'ySvg': '35'},
            {'id': 'right',         'x': -1,  'y': 0,   'xSvg': '67.5', 'ySvg': '52.5'},
            {'id': 'bottom-right',  'x': -1,  'y': -1,  'xSvg': '67.5', 'ySvg': '70'},
            {'id': 'bottom',        'x': 0,   'y': -1,  'xSvg': '50',   'ySvg': '70'},
            {'id': 'bottom-left',   'x': 1,   'y': -1,  'xSvg': '32.5', 'ySvg': '70'},
            {'id': 'left',          'x': 1,   'y': 0,   'xSvg': '32.5', 'ySvg': '52.5'},
            {'id': 'top-left',      'x': 1,   'y': 1,   'xSvg': '32.5', 'ySvg': '35'},
          ]

        section.board-game.d-table(data-player="p2" style={
          width: (boardGame.xNbCell * tileSize) + 'px',
          height: (boardGame.yNbCell * tileSize) + 'px'
        })
          - let reversedCells = boardGame.cells.reverse()
          each row, y in reversedCells
            .d-table-row
            -
              let zone = 'river'
              if (y <= boardGame.yPromotionZone) { zone = 'p2-promotion-zone' }
              if (y >= boardGame.yNbCell - 1 - boardGame.yPromotionZone) { zone = 'p1-promotion-zone' }
            - let reversedRow = row.reverse()
            - let mirrorY = boardGame.yNbCell - y - 1
            each piece, x in reversedRow
              - let mirrorX = boardGame.xNbCell - x - 1
              .tile.d-table-cell(style={
                width: tileSize + 'px',
                height: tileSize + 'px'
              })
                div(
                  class='cell ' + zone
                  data-x=mirrorX
                  data-y=mirrorY
                  style={
                    width: (tileSize - 2) + 'px',
                    height: (tileSize - 2) + 'px'
                  }
                )
                  - if (piece)
                    include piece.pug

        section.stock.player(style={height: tileSize * 0.7 + 'px'})
          .row.row-cols-auto.g-0
      #tchat.col

  // Modal affichée lorsque la partie est terminée
  #game-over-modal.modal.fade(tabindex='-1')
    .modal-dialog
      .modal-content
        .modal-header
          h1.modal-title.fs-5 Partie terminée
          button.btn-close(type='button' data-bs-dismiss='modal')
        .modal-body
          p.message.other-player-left Votre adversaire a quitté la partie.
          p.message.win Vous avez gagné la partie !
          p.message.loose Votre adversaire a gagné la partie.
        .modal-footer
          button.btn.btn-secondary(type='button' data-bs-dismiss='modal') Voir le plateau
          button.btn.btn-primary(type='button' onclick="window.location.reload()") Rejouer
